---
# tasks file for ec2_provision
# -name: include host specific vars
# include_vars:
#     file: environments/dev/variables/vars.yml

- name: Provision EC2 instance
  block:
    - name: Create security group
      amazon.aws.ec2_security_group:
        name: "{{ sec_group }}"
        description: "Sec group for app"
        region: "{{ region }}"
        aws_access_key: "{{ ec2_access_key }}"  # From vault as defined
        aws_secret_key: "{{ ec2_secret_key }}"  # From vault as defined
        rules: "{{ security_group_rules }}"

    - name: Amazon EC2 | Create Key Pair  # Create key pair for SSH
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
        aws_access_key: "{{ ec2_access_key }}"  # From vault as defined
        aws_secret_key: "{{ ec2_secret_key }}"  # From vault as defined
        key_material: "{{ item }}"
      with_file: "{{ssh_public_key}}"

    - name: Start an instance with a public IP address
      amazon.aws.ec2_instance:
        name: "public-compute-instance3"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        security_group: "{{ sec_group }}"
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        region: "{{ region }}"
        network:
          assign_public_ip: true
        image_id: "{{ image }}"
        tags:
          Environment: Testing
      register: ec2_instance

    - name: Debug EC2 instance information
      debug:
        var: ec2_instance.instances

    - name: Generate debug information configuration from template
      ansible.builtin.template:
        src: templates/debug_info.yml.j2
        dest: "{{debug_info_conf}}"
      vars:
        variable_name: "ec2_instance.instances"

 
    - name: Create security group configuration from template
      ansible.builtin.template:
        src: templates/security_group.yml.j2
        dest: "{{security_group_conf}}"
      vars:
        security_rules: "{{ security_group_rules }}"


    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.network_interfaces[0].association.public_ip }}"
        groupname: ec2
      with_items: "{{ ec2_instance.instances }}"

    - name: Wait for instance to be ready
      wait_for:
        host: "{{ item.network_interfaces[0].association.public_ip }}"
        port: 22
        delay: 30
        timeout: 320
        state: started
      with_items: "{{ ec2_instance.instances }}"
  tags: ['never', 'create_ec2']

- name: Update EC2 instance
  block:
    - name: Amazon EC2 | Remove Old Key Pair
      amazon.aws.ec2_key:
        name: "{{ old_key_name }}"
        state: absent
        region: "{{ region }}"
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
      notify: "cleanup key pairs"  # Trigger handler

    - name: Modify Security Group Rules
      amazon.aws.ec2_security_group:
        name: "{{ sec_group }}"
        rules: "{{ security_group_rules }}"
        state: present
      notify: "revoke sec group rules"  # Trigger handler
  tags: ['never', 'update_ec2']

- name: Facts
  block: # This block prints out instance data
    - name: Get instances facts
      ec2_instance_info:
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        region: "{{ region }}"
      register: result

    - name: Instances ID
      debug:
        msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
      loop: "{{ result.instances }}"
  tags: always
